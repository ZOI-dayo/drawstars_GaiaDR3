#+TITLE: 星空を描く
#+OPTIONS: ^:{} H:4

* 星空を描く
** 概要
ESA GaiaやHipparcos-2のデータを使用して星空を描画します。

[[file:./examples/milkyway.jpg]]

** 準備
*** 星表のダウンロードと抽出
星空を描画する前に、天体のカタログをダウンロードして必要な箇所だけ抜き出す必要があります。

現在サポートしているカタログは次の二つです。

- Gaia DR2
- Hipparcos-2

**** Gaia DR2

[[https://www.cosmos.esa.int/web/gaia/data-release-2][Gaia DR2]]は全天で16億以上もの天体を収録した巨大な星表です。この星表を使用すると天の川をかなり精密に描画出来ます。23等級程度の暗い星まで収録されている一方、ある程度以上明るい星は収録されていません。肉眼で見える星を全て網羅するには別の星表と組み合わせる必要があります。圧縮されたサイズで600GB弱もありダウンロードや保存、処理のために膨大なリソースが必要になります。

展開するだけで何時間もかかりますし展開後のデータサイズも巨大なため、事前に必要な項目だけを抜き出してバイナリファイルとして保存することにします。

ダウンロードと事前処理を行うには、gaiaディレクトリ下で次の手順を実行してください。

1. ARCHIVE_DIR ファイルにデータを置く場所へのパスを書く (600GB弱の空き容量が必要)
2. gaia_download.shを実行する (wgetで600GB弱のデータをダウンロードする。何日もかかる可能性あり)
3. makeを実行する (まだダウンロードが終わっていない場合はダウンロードし、その後gaia_extractをビルドして実行する。抽出結果の格納に40GB弱の空き容量が必要。何時間もかかる可能性あり)

全てが成功すると gaia/gaia_ra_dec_g_bp_rp_teff.dat (33,102,927,576バイト) というファイルが出来上がります。

gaia_extractをビルドするにはc++17が使用出来るg++とzlibが必要です。Python版(gaia_extract.py)もありますが遅いです。

**** Hipparcos-2

[[https://www.cosmos.esa.int/web/hipparcos/hipparcos-2][Hipparcos-2]]は全天で12万弱の星を収録した星表です。明るい星から約12等級程度までの星を収録しており、主要な星をカバーしています。

ダウンロードと事前処理を行うには、hip2ディレクトリ下でmakeを実行してください。

9MB弱のファイルをwgetでダウンロードし、33MB弱のファイルを展開し、Pythonのスクリプトで必要なデータを抜き出します。

全てが成功すると hip2/hip2_ra_dec_mag_bv.dat (1,887,280バイト) というファイルが出来上がります。

*** drawstarsコマンドのビルド

トップディレクトリでmakeするとdrawstarsコマンドをビルドします。

ビルドにはC++17が使用可能なg++とjpeglib、libpng、zlibが必要です。

** drawstarsコマンドのオプション
*** 入力オプション
| オプション名     | 指定値                                                 | 省略時 |
|------------------+--------------------------------------------------------+--------|
| =--catalog-dir=  | 各カタログディレクトリ(gaia/, hip2/)がある場所へのパス |      . |
| =--gaia=         | Gaiaのデータを使用する                                 |   true |
| =--gaia-min-mag= | Gaiaのデータの中で使用する最小の(最も明るい)等級       |    8.0 |
| =--hip2=         | Hipparcos-2のデータを使用する                          |   true |
| =--hip2-max-mag= | Hipparcos-2のデータの中で使用する最大の(最も暗い)等級  |    8.0 |
| =--min-mag=      | 使用する最小の(最も明るい)等級                         | -100.0 |
| =--max-mag=      | 使用する最大の(最も暗い)等級                           |  100.0 |

*** 出力オプション
| オプション名     | 指定値                         | 省略時        |
|------------------+--------------------------------+---------------|
| =--floats=       | 浮動小数点数形式画像の出力先   | output.floats |
| =--output=, =-o= | 画像の出力先(.bmp, .png, .jpg) | output.png    |
| =--jpeg-q=       | JPEG出力時の品質値(0~100)      | 75            |

*** レンダリングオプション
| オプション名             | 指定値                         |          省略時 |
|--------------------------+--------------------------------+-----------------|
| =--projection=, =--proj= | 投影モード(ER,PERS,LOAD)       | EQUIRECTANGULAR |
| =--width=, =-w=          | 画像の幅[ピクセル]             |            4096 |
| =--height=, =-h=         | 画像の高さ[ピクセル]           |            2048 |
| =--flux-offset=          | 星の明るさに加算する値         |             0.0 |
| =--flux-multiplier=      | 星の明るさに乗ずる値           |             1.0 |
| =--flux-gamma=           | 星の明るさに対するガンマ補正値 |             1.0 |
| =--flux-max=             | 星の明るさの上限               |             1.0 |
| =--flux-inc-radius=      | 半径を大きくし始める星の明るさ |            M6.0 |
| =--radius-default=       | デフォルトの半径[ピクセル]     |             0.6 |
| =--radius-max=           | 最大の半径[ピクセル]           |             4.0 |

- =--projection=, =--proj= :: 星空の位置をどのように計算するかのモードです。指定出来るのは次のいずれかです。
  - EQUIRECTANGULAR, ER :: 正距円筒図法(equirectangular projection)モード。天球全体を一枚の画像に描画するモードです。
  - PERSPECTIVE, PERS :: 透視投影図法(perspective projection)モード。ある観測点から見た空をカメラから撮影したように描画するモードです。
  - LOAD :: 画像読み込みモード。レンダリングは行わず前回のレンダリングで出力された =--floats= で指定されているファイルを読み込み、ポストプロセスのみ適用して画像を再出力します。画像全体の明るさを微調整するときに使用します。
- =--width=, =-h=, =--height=, =-h= :: 出力画像のサイズを指定するオプションです。 =--projection= がEQUIRECTANGULARのときは横と縦の比率が2:1である必要があります。
- =--flux-offset=, =--flux-multiplier=, =--flux-gamma=, =--flux-max= :: 星の明るさに関わるオプションです。星の明るさは ((=--flux-offset=) + (=--flux-multiplier=) * 10^{-0.4*星の等級})^{1 / =--flux-gamma=} で計算します。計算で求めた明るさは =--flux-max= を越えないように制限されます。明るさの1.0はピクセルの最大輝度に相当します。

  デフォルトでは0等星が1.0となります。5等星で1.0になるようにするには、--flux-multiplier=M-5.0 と指定します。頭にMをつけると倍率を等級で指定出来ます。M-5.0は-5等級分の倍率を表します。倍率は 10^{-0.4*等級} で計算出来るので、M-5.0 は 100 となり、--flux-multiplier=100 と指定したのと同じになります。5等星の明るさは 10^{-0.4*5}=0.01 なので、100倍すると1.0となります。このとき0等星の明るさは100.0という非常に大きな値になります。

  =--flux-max= で明るさの上限を制限すると、明るい星の色が白飛びするのを防ぐことができます。明るさが1.0を超えると最終的な画像出力時にRGB各要素が最大値に近づき、あるいは最大値を超えるため、真っ白に描画されて何色か分からなくなってしまいます(赤い星も青い星も全て真っ白に描画されます)。レンダリングの段階で一つの星の明るさを1.0までに制限すると、星の色のRGB各要素に1.0までの明るさを乗じた値で描画することになるためRGB各要素は1.0を超えることはありません(ただし、他の星と重なっている場合は合計値が1.0を超えることがあります)。逆にカメラのセンサーを再現したい場合は =--flux-max= の値を引き上げて意図的に白飛びさせる必要があります。
- =--flux-inc-radius=, =--radius-default=, =--radius-max= :: 星の半径に関するオプションです。星の明るさは非常に幅があり、肉眼で見える範囲の星だけでも画像の1ピクセルの濃淡(256段階)で表現するのは困難です。そのため、ある程度以上明るい星は、明るさ自体は頭打ちにして、円の半径を大きくすることで表現します。通常は =--radius-default= で指定した半径で描画します。 =--flux-inc-radius= はその半径を大きくし始める明るさです。星の明るさ(10^{-0.4*星の等級})が =--flux-inc-radius= を越えたところから半径を大きくし始めます。半径は明るさの比率が円の面積の比率と一致するように求めます(radius = (=--radius-default=) * sqrt( 星の明るさ / (=--flux-inc-radius=) ))。求めた半径をさらに =--radius-max= を越えないように制限します。

  =--radius-default= はデフォルトで0.6に設定されています。半径0.5(直径1.0)にすると描画アルゴリズム上意図しないムラができる場合があるので0.5より少し大きめに設定しています。それでも設定次第では横線が入る等ムラができる場合があるので必要に応じて調整してください。半径を大きくすると天の川など多数の暗い星が重なっている場所は明るくなります。

  例えば3等星以上の星を大きくしたい場合、 --flux-inc-radius=M3 と指定します。M3は3等級差の倍率を表し、 10^{-0.4*3}=0.063095734448 なので --flux-inc-radius=0.063095734448 と指定したのと同じです。星の明るさが 0.063095734448 を超えるまでは =--radius-default= の半径で描画します。超えた場合は上述の方法で半径を計算して描画します。例えば0等星の明るさは 10^{-0.4*0}=1.0 なので、 半径は 0.6*sqrt(1.0/0.063095734448) = 2.38864302332 となります。それを =--radius-max= を超えないように制限します。

*** ポストプロセスオプション
| オプション名        | 指定値                   | 省略時 |
|---------------------+--------------------------+--------|
| =--post-offset=     | 出力最小値               |    0.0 |
| =--post-multiplier= | 乗数                     |    1.0 |
| =--post-gamma=      | ガンマ補正値             |    1.0 |
| =--post-keep-color= | 飽和処理で色を維持するか |  false |

最終的な画像を出力するときの補正値です。

出力ピクセル値 = (=--post-offset= + =--post-multiplier= * RGB各要素の値)^{1/ =--post-gamma= }

出力ピクセル値が1.0を超える場合は飽和処理を行います。
=--post-keep-color= がtrueのときは、可能な限り色を保持したままRGB各要素が1.0以下になるようにします。具体的には、RGB各要素の最大値を求め、その逆数を各要素に乗じます。
=--post-keep-color= がfalseのときは、RGB各要素を個別に1.0までに制限します。このオプションで色を保存するよりも、 =--flux-max= で制限した方が大抵は良い結果が得られます。

=--post-gamma= に1.0より大きい値を指定すると暗い部分を底上げ出来ますが彩度が失われて白っぽくなってしまいます。 =--flux-gamma= を使用した方が色味が維持されます(その代わり調整のたびに再レンダリングが必要になります)。

*** 透視図法オプション
以下は --projection=PERSPECTIVE のときのみ有効です。

| オプション名 | 指定値                           |                              省略時 |                                                                                               |
|--------------+----------------------------------+-------------------------------------+-----------------------------------------------------------------------------------------------|
| --time       | 観測時刻(2000-01-23 12:34の形式) |                          現在の時刻 |                                                                                               |
| --lat        | 観測地点の天文緯度[度]           |                           35.681236 |                                                                                               |
| --lng        | 観測地点の天文経度[度]           |                          139.767125 |                                                                                               |
| --az         | 向いている方向(方位角)[度]       |                                 0.0 |                                                                                               |
| --el         | 向いている方向(仰角)[度]         |                                 0.0 |                                                                                               |
| --roll       | ロール角[度]                     |                                 0.0 |                                                                                               |
| --ra         | 向いている方向(赤経)[度]         | 285.0(az,elが指定されているときは0) |                                                                                               |
| --dec        | 向いている方向(赤偉)[度]         | -25.0(az,elが指定されているときは0) |                                                                                               |
| --fovy       | 垂直視野角[度]                   |                               100.0 |                                                                                               |
| --view-z     | 天球中心から視点の距離           |                                 0.0 | 0.0のとき心射方位図法(gnomonic projection)、1.0のとき平射図法(stereographic projection)になる |

** 使用例
*** 正距円筒図法による天球テクスチャの作成

正距円筒図法(equirectangular projection)は360度VRパノラマ写真でもよく使われている図法です。天球座標(赤経,赤偉)をそのまま平面座標(x,y)に読み替えたものです。

全天の星を正距円筒図法で描画するには例えば次のコマンドを実行します。

#+begin_src sh
drawstars --proj=EQUIRECTANGULAR --flux-gamma=1.2 --flux-multiplier=M-4.0 --flux-inc-radius=M3.0 --radius-default=1.20 --radius-max=2.5 --post-gamma=1.5 --output=er.jpg --floats=er.floats
#+end_src

=--flux-multiplier=M-4.0= の指定によって4等星が最大輝度になります。星の明るさは 10^{-0.4*-4}=39.8107170553 倍されますが、 =--flux-max= のデフォルト値が1.0なので1.0より大きくなることはありません。

=--radius-default=1.20= の指定によって星はデフォルトで半径1.2ピクセルの円で描画されます。 =--flux-inc-radius=M3.0= の指定によって3等星より明るい星は円の半径が大きくなりますが、 =--max-radius=2.5= の指定によって半径2.5ピクセルよりは大きくなりません。

=--flux-gamma=1.2= の指定によって暗い星は少し底上げされます。

=--post-gamma=1.5= の指定によってレンダリング後の結果全体も少し底上げされます(多少色味が失われます)。

ポストプロセス前の浮動小数点数形式の画像がer.floatsに出力され、ポストプロセス後の画像がer.jpgに出力されます。

こうしてできた画像を球のモデルにテクスチャとして貼り付けると全天を見回すVR映像が出来上がります。

- デモ :
- ソース : [[file:./examples/celestial-sphere/]]

[[file:./examples/celestial-sphere/screenshot1.jpg]]

[[file:./examples/celestial-sphere/screenshot2.jpg]]

*** 実際の写真とレンダリング結果との比較

drawstarsは地上の観測者から見た星空を再現することも可能です。

そこで実際に撮影した写真とレンダリング結果を比較してみることにしました。

[[file:./examples/compare-to-real/screenshot1.jpg]]

撮影に使用したカメラ、レンズ、焦点距離設定から画角を計算してみると、垂直方向の画角は53度と出ました。

#+begin_src sh
drawstars --proj=PERSPECTIVE --width=2400 --height=1600 --fovy=53 \
  --lat=36.699255 --lng=138.486832 --time="2019-07-29 20:58:56" \
  --az=-5.58 --el=34.35 --roll=4.90 --flux-multiplier=M-7.5 --flux-inc-radius=M7.5 \
  --post-gamma=2.2 --output=20190729-fovy53.jpg --floats=20190729-fovy53.floats
#+end_src

- =--fovy= で垂直方向の画角(53度)を指定
- =--lat= と =--lng= で撮影した位置を指定(本来は天文経緯度で指定)
- =--time= で撮影時刻を指定
- =--az= と =--el= で方位角と仰角を指定
- カメラが若干傾いているようなので =--roll= で調整

[[file:./examples/compare-to-real/screenshot2.jpg]]

概ね近い画像が得られましたが、比較してみるとレンズの歪みによる差異が見られました。実際の写真はレンダリングされた画像と比べて中心部は拡大され、周辺部は縮小されているように見えます。理想的な透視投影図法は縦横の直線が真っ直ぐ再現されますが、カメラで撮影したものは多少曲がって写ります。

=--view-z= を指定してわずかにステレオ投影気味にすることで実際に撮影した写真により近づけることができました。

#+begin_src sh
drawstars --proj=PERSPECTIVE --width=2400 --height=1600 --fovy=44.9 --view-z=0.18 \
  --lat=36.699255 --lng=138.486832 --time="2019-07-29 20:58:56" \
  --az=-5.58 --el=34.35 --roll=4.90  --flux-multiplier=M-7.5 --flux-inc-radius=M7.5 \
  --post-gamma=2.2 --output=20190729.jpg --floats=20190729.floats
#+end_src

デモでは画像をクリックすることで二つの画像を比較出来ます。

- デモ :
- ソース : [[file:./examples/compare-to-real/]]

** 参考
- [[https://www.cosmos.esa.int/web/gaia/data-release-2][Gaia Data Release 2 - Gaia - Cosmos]] : This work has made use of data from the European Space Agency (ESA) mission Gaia (https://www.cosmos.esa.int/gaia), processed by the Gaia Data Processing and Analysis Consortium (DPAC, https://www.cosmos.esa.int/web/gaia/dpac/consortium). Funding for the DPAC has been provided by national institutions, in particular the institutions participating in the Gaia Multilateral Agreement.
- [[https://www.cosmos.esa.int/web/hipparcos/hipparcos-2][The Hipparcos-2 Catalogue - Hipparcos - Cosmos]]
- [[http://www.iausofa.org/][Standards of Fundamental Astronomy]]
- [[https://zah.uni-heidelberg.de/institutes/ari/gaia/outreach/gaiasky/][Zentrum für Astronomie: Gaia Sky]]
- [[http://www.chijinshokan.co.jp/Books/ISBN4-8052-0225-4.htm][天体の位置計算 増補版]]
